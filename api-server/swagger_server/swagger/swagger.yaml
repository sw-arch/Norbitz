---
swagger: "2.0"
info:
  version: "1.2.0"
  title: "Norbitz Travel API"
  contact:
    name: "Slack Channel"
    url: "https://drbyron.slack.com/messages/norbitz-travel/"
host: "api.norbitz.jac.observer"
tags:
- name: "public"
  description: "calls anonymous users can invoke"
- name: "private"
  description: "calls logged-in users can invoke"
schemes:
- "http"
paths:
  /register:
    post:
      tags:
      - "public"
      summary: "Register"
      description: "Use this endpoint to register a new user"
      operationId: "register"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "credentials"
        description: "username and password"
        required: true
        schema:
          $ref: "#/definitions/Credential"
      responses:
        201:
          description: "User registered"
          schema:
            $ref: "#/definitions/User"
        401:
          description: "User already exists"
      x-swagger-router-controller: "swagger_server.controllers.public_controller"
  /login:
    post:
      tags:
      - "public"
      summary: "Login"
      description: "Use this endpoint to login to Norbitz."
      operationId: "login"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "credentials"
        description: "User to login as"
        required: true
        schema:
          $ref: "#/definitions/Credential"
      responses:
        200:
          description: "Login Success"
          schema:
            $ref: "#/definitions/User"
        401:
          description: "Login Failure"
      x-swagger-router-controller: "swagger_server.controllers.public_controller"
  /user:
    get:
      tags:
      - "private"
      summary: "Load user data"
      description: "Load your data with this endpoint."
      operationId: "load"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "query"
        description: "Username"
        required: true
        type: "string"
      responses:
        200:
          description: "User"
          schema:
            $ref: "#/definitions/User"
        400:
          description: "Invalid username"
      x-swagger-router-controller: "swagger_server.controllers.private_controller"
  /order:
    post:
      tags:
      - "private"
      summary: "Save order data"
      description: "Save an order data entry with this endpoint."
      operationId: "save"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "orderMessage"
        description: "Order information"
        required: true
        schema:
          $ref: "#/definitions/OrderMessage"
      responses:
        201:
          description: "Saved"
        400:
          description: "Invalid input"
      x-swagger-router-controller: "swagger_server.controllers.private_controller"
    delete:
      tags:
      - "private"
      summary: "Delete user's order history"
      operationId: "delete"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "query"
        description: "Username"
        required: true
        type: "string"
      responses:
        200:
          description: "Deleted"
        400:
          description: "Invalid username"
      x-swagger-router-controller: "swagger_server.controllers.private_controller"
definitions:
  Credential:
    required:
    - "password"
    - "username"
    properties:
      username:
        type: "string"
        example: "JacobAMason"
      password:
        type: "string"
        example: "p4ssw0rd"
    example:
      password: "p4ssw0rd"
      username: "JacobAMason"
  User:
    required:
    - "orders"
    - "username"
    properties:
      username:
        type: "string"
        example: "JacobAMason"
      orders:
        type: "array"
        items:
          type: "string"
          example: "{...}"
    example:
      orders:
      - "{...}"
      - "{...}"
      username: "JacobAMason"
  OrderMessage:
    required:
    - "order"
    - "username"
    properties:
      username:
        type: "string"
        example: "JacobAMason"
      order:
        type: "string"
        example: "{...}"
    example:
      username: "JacobAMason"
      order: "{...}"
